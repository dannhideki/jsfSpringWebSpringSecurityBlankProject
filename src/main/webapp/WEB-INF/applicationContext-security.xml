<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/user_common/**" access="hasRole('ROLE_COMMON')" />
        <form-login login-page="/public/login.jsf"
            always-use-default-target="false"
            authentication-success-handler-ref="authenticationSuccessHandler"
            authentication-failure-url="/public/login.jsf?login_error=1" />
        <logout invalidate-session="true" delete-cookies="true" logout-success-url="/public/index.jsf"/>
        <access-denied-handler error-page="/denied/accessDenied.jsf?login_error=1" />

    </http>
     
    <beans:bean id="authenticationSuccessHandler"
        class="com.dannhideki.utils.security.UrlAuthenticationSuccessHandler" />                
    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="md5"/>
            <jdbc-user-service data-source-ref="dataSource"
                authorities-by-username-query="SELECT u.login, p.permission
                                                    FROM USUARIO u
                                               JOIN USUARIO_PERMISSAO p ON u.id = p.id
                                                    AND u.login = ?"
               users-by-username-query="SELECT login, password, enable
                                           FROM USUARIO
                                        WHERE login = ? " />
        </authentication-provider>
    </authentication-manager>
</beans:beans>